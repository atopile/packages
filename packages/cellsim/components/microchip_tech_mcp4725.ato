#pragma experiment("MODULE_TEMPLATING")
#pragma experiment("FOR_LOOP")

import ElectricPower
import ElectricSignal
import I2C
import Addressor

module Microchip_Tech_MCP4725A0T:
    """
    MCP4725A0T DAC with I2C interface
    """

    # Components
    ic = new _Microchip_Tech_MCP4725A0T

    # I2C
    i2c = new I2C
    i2c.scl.line ~ ic.SCL
    i2c.sda.line ~ ic.SDA

    # Power
    power = new ElectricPower
    power.vcc ~ ic.VDD
    power.gnd ~ ic.VSS

    # Output
    output = new ElectricSignal
    output.line ~ ic.VOUT
    output.reference.gnd ~ power.gnd

    # Address
    addressor = new Addressor<address_bits=1>
    assert i2c.address is addressor.address
    assert addressor.base is 0x60
    addressor.address_lines[0].line ~ ic.A0
    addressor.address_lines[0].reference ~ power

component _Microchip_Tech_MCP4725A0T:
    """
    12-bit DAC with I2C interface
    """
    # footprint = "SOT-23-6_L2.9-W1.6-P0.95-LS2.8-BL"
    lcsc_id = "C144198"
    mpn = "MCP4725A0T"

    signal VOUT ~ pin 1
    signal VSS ~ pin 2
    signal VDD ~ pin 3
    signal SDA ~ pin 4
    signal SCL ~ pin 5
    signal A0 ~ pin 6


module Test:
    """
    Test module for MCP4725A0T
    """
    dacs = new Microchip_Tech_MCP4725A0T[2]

    # Interfaces
    power = new ElectricPower
    i2c = new I2C

    # Connections
    for dac in dacs:
        power ~ dac.power
        i2c ~ dac.i2c

    # Address
    dacs[0].i2c.address = 0x60
    dacs[1].i2c.address = 0x61
